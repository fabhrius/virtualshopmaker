{"version":3,"file":"script.js","mappings":"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","sources":["webpack://advanced-post-block/external var \"React\"","webpack://advanced-post-block/external var \"ReactDOM\"","webpack://advanced-post-block/./src/Single/FeatureImage.js","webpack://advanced-post-block/./src/Single/PostMetaAuthor.js","webpack://advanced-post-block/./src/Single/PostMetaDate.js","webpack://advanced-post-block/./src/utils/functions.js","webpack://advanced-post-block/./src/Single/PostMetaCategory.js","webpack://advanced-post-block/./src/Single/PostMetaReadTime.js","webpack://advanced-post-block/./src/Single/PostMetaComment.js","webpack://advanced-post-block/./src/Single/Meta.js","webpack://advanced-post-block/./src/Single/Title.js","webpack://advanced-post-block/./src/Single/TitleMeta.js","webpack://advanced-post-block/./src/Single/PostExcerpt.js","webpack://advanced-post-block/./src/Single/PostReadMore.js","webpack://advanced-post-block/./src/Layout/Default.js","webpack://advanced-post-block/./src/Layout/SideImage.js","webpack://advanced-post-block/./src/Layout/Overlay.js","webpack://advanced-post-block/./src/Layout/MapPosts.js","webpack://advanced-post-block/./src/Components/Frontend/DisplayPosts.js","webpack://advanced-post-block/./src/Pagination/usePagination.js","webpack://advanced-post-block/./src/Pagination/index.js","webpack://advanced-post-block/./src/script.js","webpack://advanced-post-block/./src/utils/configs.js"],"sourcesContent":["var __WEBPACK_NAMESPACE_OBJECT__ = React;","var __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","const FeatureImage = ({ post, attributes }) => {\r\n\tconst { link, thumbnail: { url: thumbUrl, alt: thumbAlt }, categories } = post;\r\n\tconst { isFImg, isFImgLink, isMeta, isMetaCategory, metaCategoryIn, isLinkNewTab } = attributes;\r\n\r\n\treturn (isFImg && thumbUrl) ? <figure className='apbThumb'>\r\n\t\t{isFImgLink ? <a href={link} target={isLinkNewTab ? '_blank' : '_self'} rel='noreferrer' aria-label={thumbAlt}>\r\n\t\t\t<img src={thumbUrl} alt={thumbAlt} />\r\n\t\t</a> : <img src={thumbUrl} alt={thumbAlt} />}\r\n\r\n\t\t{(isMeta && isMetaCategory && 'image' === metaCategoryIn) && <div className='apbThumbCats' dangerouslySetInnerHTML={{ __html: categories.space }} />}\r\n\t</figure> : null;\r\n};\r\nexport default FeatureImage;","const PostMetaAuthor = ({ post, attributes }) => {\r\n\tconst { author } = post;\r\n\tconst { name, link } = author || {};\r\n\tconst { isMetaAuthor, isMetaAuthorLink = true, metaAuthorIcon } = attributes;\r\n\r\n\treturn isMetaAuthor ? <span>\r\n\t\t{metaAuthorIcon ?\r\n\t\t\t<img src={metaAuthorIcon} alt='Author' /> :\r\n\t\t\t<span className='dashicons dashicons-admin-users' />}\r\n\r\n\t\t{!isMetaAuthorLink ?\r\n\t\t\t<span>{name}</span> :\r\n\t\t\t<a href={link} target='_blank' rel='noreferrer' aria-label={name}>{name}</a>}\r\n\t</span> : null;\r\n};\r\nexport default PostMetaAuthor;","const PostMetaDate = ({ post, attributes }) => {\r\n\tconst { date } = post;\r\n\tconst { isMetaDate, metaDateIcon } = attributes;\r\n\r\n\treturn isMetaDate ? <span>\r\n\t\t{metaDateIcon ?\r\n\t\t\t<img src={metaDateIcon} alt='Date' /> :\r\n\t\t\t<span className='dashicons dashicons-calendar-alt' />}\r\n\r\n\t\t<span>{date}</span>\r\n\t</span> : null;\r\n};\r\nexport default PostMetaDate;","export const truncate = (str, nu_words) => str && str.split(' ').splice(0, nu_words).join(' ');\r\n\r\nexport const strToIntArr = str => str?.trim().split(',').map(id => id ? parseInt(id) : id);\r\nexport const filterNaN = array => array?.filter(id => id && !isNaN(id));\r\n\r\nexport const strLength = (str) => str ? str.split(' ').length : 0;\r\n\r\nexport const wordCount = content => content ? (content?.replace(/(<([^>]+)>)/gi, '').split(/\\s+/) || []).length : 0;\r\n\r\nexport const renderHTML = raw => <span dangerouslySetInnerHTML={{ __html: raw }} />;\r\n\r\nexport const filterObject = (obj, callback) => Object.fromEntries(Object.entries(obj).filter(([key, val]) => callback(key, val)));\r\n\r\nexport const omit = ({ [key]: _, ...obj }, key) => obj;\r\n\r\nexport const filterSelected = (taxonomy, selected) => taxonomy?.map(tax => tax.id)?.filter(tax => selected.indexOf(tax) !== -1);\r\n\r\nexport const dateFormat = (format, date) => {\r\n\tconst suffix = {\r\n\t\t'01': 'st',\r\n\t\t'02': 'nd',\r\n\t\t'03': 'rd'\r\n\t};\r\n\r\n\tif (!date || date === '') {\r\n\t\tdate = new Date();\r\n\t}\r\n\telse if (typeof (date) !== 'object') {\r\n\t\tdate = new Date(date.replace(/-/g, '/')); // attempt to convert string to date object\t\r\n\t}\r\n\r\n\tvar string = '',\r\n\t\tmo = date.getMonth(),\t// month (0-11)\r\n\t\tm1 = mo + 1,\t\t\t// month (1-12)\r\n\t\tdow = date.getDay(),\t// day of week (0-6)\r\n\t\td = date.getDate(),\t\t// day of the month (1-31)\r\n\t\ty = date.getFullYear(), // 1999 or 2003\r\n\t\th = date.getHours(),\t// hour (0-23)\r\n\t\tmi = date.getMinutes(), // minute (0-59)\r\n\t\ts = date.getSeconds(); // seconds (0-59)\r\n\r\n\tfor (var i = 0, len = format.length; i < len; i++) {\r\n\t\tswitch (format[i]) {\r\n\t\t\tcase 'j': // Day of the month without leading zeros (1 to 31)\r\n\t\t\t\tstring += d;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'd': // Day of the month, 2 digits with leading zeros (01 to 31)\r\n\t\t\t\tstring += (d < 10) ? '0' + d : d;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'S': // Day of the month, 2 digits with leading zeros (01 to 31)\r\n\t\t\t\tstring += suffix[d] || 'th';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'l': // (lowercase 'L') A full textual representation of the day of the week\r\n\t\t\t\tvar days = Array('Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday');\r\n\t\t\t\tstring += days[dow];\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'w': // Numeric representation of the day of the week (0=Sunday,1=Monday,...6=Saturday)\r\n\t\t\t\tstring += dow;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'D': // A textual representation of a day, three letters\r\n\t\t\t\tdays = Array('Sun', 'Mon', 'Tue', 'Wed', 'Thr', 'Fri', 'Sat');\r\n\t\t\t\tstring += days[dow];\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'm': // Numeric representation of a month, with leading zeros (01 to 12)\r\n\t\t\t\tstring += (m1 < 10) ? '0' + m1 : m1;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'n': // Numeric representation of a month, without leading zeros (1 to 12)\r\n\t\t\t\tstring += m1;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'F': // A full textual representation of a month, such as January or March \r\n\t\t\t\tvar months = Array('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December');\r\n\t\t\t\tstring += months[mo];\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'M': // A short textual representation of a month, three letters (Jan - Dec)\r\n\t\t\t\tmonths = Array('Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec');\r\n\t\t\t\tstring += months[mo];\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'Y': // A full numeric representation of a year, 4 digits (1999 OR 2003)\t\r\n\t\t\t\tstring += y;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'y': // A two digit representation of a year (99 OR 03)\r\n\t\t\t\tstring += y.toString().slice(-2);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'H': // 24-hour format of an hour with leading zeros (00 to 23)\r\n\t\t\t\tstring += (h < 10) ? '0' + h : h;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'g': // 12-hour format of an hour without leading zeros (1 to 12)\r\n\t\t\t\tvar hour = (h === 0) ? 12 : h;\r\n\t\t\t\tstring += (hour > 12) ? hour - 12 : hour;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'h': // 12-hour format of an hour with leading zeros (01 to 12)\r\n\t\t\t\thour = (h === 0) ? 12 : h;\r\n\t\t\t\thour = (hour > 12) ? hour - 12 : hour;\r\n\t\t\t\tstring += (hour < 10) ? '0' + hour : hour;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'a': // Lowercase Ante meridiem and Post meridiem (am or pm)\r\n\t\t\t\tstring += (h < 12) ? 'am' : 'pm';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'i': // Minutes with leading zeros (00 to 59)\r\n\t\t\t\tstring += (mi < 10) ? '0' + mi : mi;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 's': // Seconds, with leading zeros (00 to 59)\r\n\t\t\t\tstring += (s < 10) ? '0' + s : s;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'c': // ISO 8601 date (eg: 2012-11-20T18:05:54.944Z)\r\n\t\t\t\tstring += date.toISOString();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tstring += format[i];\r\n\t\t}\r\n\t}\r\n\r\n\treturn string;\r\n}\r\n\r\nexport const classNames = (...args) => {\r\n\tconst classes = args.reduce((acc, arg) => {\r\n\t\tif (typeof arg === 'string') {\r\n\t\t\tacc.push(arg);\r\n\t\t} else if (typeof arg === 'object') {\r\n\t\t\tObject.entries(arg).forEach(([key, value]) => {\r\n\t\t\t\tif (value) {\r\n\t\t\t\t\tacc.push(key);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn acc;\r\n\t}, []);\r\n\r\n\treturn classes.join(' ');\r\n}","import { renderHTML } from '../utils/functions';\r\n\r\nconst PostMetaCategory = ({ post, attributes }) => {\r\n\tconst { categories } = post;\r\n\tconst { isMetaCategory, metaCategoryIn, metaCategoryIcon } = attributes;\r\n\r\n\treturn (isMetaCategory && 'content' === metaCategoryIn) ? <span>\r\n\t\t{metaCategoryIcon ?\r\n\t\t\t<img src={metaCategoryIcon} alt='Author' /> :\r\n\t\t\t<span className='dashicons dashicons-category' />}\r\n\r\n\t\t{renderHTML(categories.coma)}\r\n\t</span> : null;\r\n};\r\nexport default PostMetaCategory;","const PostMetaReadTime = ({ post, attributes }) => {\r\n\tconst { readTime } = post;\r\n\tconst { isMetaReadTime, metaReadTimeIcon, isMetaReadTimeSec, metaReadTimeLabel } = attributes;\r\n\r\n\tconst readTimeText = isMetaReadTimeSec ? `${readTime?.min}:${readTime?.sec}` : readTime?.min;\r\n\r\n\treturn isMetaReadTime ? <span>\r\n\t\t{metaReadTimeIcon ?\r\n\t\t\t<img src={metaReadTimeIcon} alt='Author' /> :\r\n\t\t\t<span className='dashicons dashicons-clock' />}\r\n\r\n\t\t<span>{readTimeText} {metaReadTimeLabel}</span>\r\n\t</span> : null;\r\n};\r\nexport default PostMetaReadTime;","const PostMetaComment = ({ post, attributes }) => {\r\n\tconst { link, title, commentCount } = post;\r\n\tconst { isMetaComment, metaCommentIcon } = attributes;\r\n\r\n\treturn isMetaComment ? <span>\r\n\t\t{metaCommentIcon ?\r\n\t\t\t<img src={metaCommentIcon} alt='Author' /> :\r\n\t\t\t<span className='dashicons dashicons-admin-comments' />}\r\n\r\n\t\t<a href={`${link}/#comments`} target='_blank' rel='noreferrer' aria-label={`Comments of ${title}`}>{commentCount}</a>\r\n\t</span> : null;\r\n};\r\nexport default PostMetaComment;","import PostMetaAuthor from './PostMetaAuthor';\r\nimport PostMetaDate from './PostMetaDate';\r\nimport PostMetaCategory from './PostMetaCategory';\r\nimport PostMetaReadTime from './PostMetaReadTime';\r\nimport PostMetaComment from './PostMetaComment';\r\n\r\nconst Meta = ({ post, attributes }) => {\r\n\tconst { isMeta } = attributes;\r\n\r\n\treturn isMeta && <div className='apbMeta'>\r\n\t\t<PostMetaAuthor post={post} attributes={attributes} />\r\n\t\t<PostMetaDate post={post} attributes={attributes} />\r\n\t\t<PostMetaCategory post={post} attributes={attributes} />\r\n\t\t<PostMetaReadTime post={post} attributes={attributes} />\r\n\t\t<PostMetaComment post={post} attributes={attributes} />\r\n\t</div>;\r\n};\r\nexport default Meta;","const Title = ({ post, attributes }) => {\r\n\tconst { link, title } = post;\r\n\tconst { isTitle, isTitleLink, isLinkNewTab } = attributes;\r\n\r\n\treturn isTitle ? <>\r\n\t\t{isTitleLink ?\r\n\t\t\t<h3 className='apbTitle'>\r\n\t\t\t\t<a href={link} target={isLinkNewTab ? '_blank' : '_self'} rel='noreferrer' dangerouslySetInnerHTML={{ __html: title }} aria-label={title} />\r\n\t\t\t</h3> :\r\n\t\t\t<h3 className='apbTitle' dangerouslySetInnerHTML={{ __html: title }} />}\r\n\t</> : null;\r\n};\r\nexport default Title;","import Meta from './Meta';\r\nimport Title from './Title';\r\n\r\nconst TitleMeta = ({ post, attributes }) => {\r\n\tconst { elementsSort = ['title', 'meta'] } = attributes;\r\n\r\n\treturn elementsSort.map((el, index) => 'title' === el ? <Title key={index} post={post} attributes={attributes} /> : <Meta key={index} post={post} attributes={attributes} />)\r\n}\r\nexport default TitleMeta;","import { truncate, strLength } from '../utils/functions';\r\n\r\nconst PostExcerpt = ({ post, attributes }) => {\r\n\tconst { excerpt, content } = post;\r\n\tconst { isExcerpt, isExcerptFromContent, isEllipsisOnExcerpt, excerptLength } = attributes;\r\n\r\n\tconst finalExcerpt = (!isExcerptFromContent && excerpt) ? excerpt : content;\r\n\tconst ellipsis = (isEllipsisOnExcerpt && (strLength(finalExcerpt) > excerptLength)) ? '...' : '';\r\n\r\n\treturn isExcerpt ? <div className='apbExcerpt apbInnerContent' dangerouslySetInnerHTML={{ __html: `${truncate(finalExcerpt, excerptLength)}${ellipsis}` }} /> : null;\r\n};\r\nexport default PostExcerpt;","const PostReadMore = ({ post, attributes }) => {\r\n\tconst { link } = post;\r\n\tconst { isReadMore, readMorePosition = 'auto', readMoreLabel, isLinkNewTab } = attributes;\r\n\r\n\treturn isReadMore ? <div className={`apbReadMore ${readMorePosition}`}>\r\n\t\t<a href={link} target={isLinkNewTab ? '_blank' : '_self'} rel='noreferrer' dangerouslySetInnerHTML={{ __html: readMoreLabel }} aria-label={readMoreLabel} />\r\n\t</div> : null;\r\n};\r\nexport default PostReadMore;","import FeatureImage from '../Single/FeatureImage';\r\nimport TitleMeta from '../Single/TitleMeta';\r\nimport PostExcerpt from '../Single/PostExcerpt';\r\nimport PostReadMore from '../Single/PostReadMore';\r\nimport { classNames } from '../utils/functions';\r\n\r\nconst Default = ({ post, attributes, postClass }) => {\r\n\tconst { subLayout } = attributes;\r\n\r\n\tconst className = classNames(postClass, 'apbDefault');\r\n\r\n\treturn <article className={className}>\r\n\t\t<FeatureImage post={post} attributes={attributes} />\r\n\r\n\t\t<div className='apbText'>\r\n\t\t\t<TitleMeta post={post} attributes={attributes} />\r\n\r\n\t\t\t{'title-meta' !== subLayout && <>\r\n\t\t\t\t<PostExcerpt post={post} attributes={attributes} />\r\n\t\t\t\t<PostReadMore post={post} attributes={attributes} />\r\n\t\t\t</>}\r\n\t\t</div>\r\n\t</article>;\r\n};\r\nexport default Default;","import FeatureImage from '../Single/FeatureImage';\r\nimport TitleMeta from '../Single/TitleMeta';\r\nimport PostExcerpt from '../Single/PostExcerpt';\r\nimport PostReadMore from '../Single/PostReadMore';\r\nimport { classNames } from '../utils/functions';\r\n\r\nconst SideImage = ({ post, attributes, postClass }) => {\r\n\tconst { thumbnail } = post;\r\n\tconst { subLayout, isFImg } = attributes;\r\n\r\n\tconst isLeftImg = 'left-image' === subLayout;\r\n\tconst isRightImg = 'right-image' === subLayout;\r\n\tconst className = classNames(postClass, 'apbSideImage', {\r\n\t\t'grid': isFImg && thumbnail.url,\r\n\t\t'leftImage': isLeftImg,\r\n\t\t'rightImage': isRightImg\r\n\t});\r\n\r\n\treturn <article className={className}>\r\n\t\t{isLeftImg && <FeatureImage post={post} attributes={attributes} />}\r\n\r\n\t\t<div className='apbText'>\r\n\t\t\t<TitleMeta post={post} attributes={attributes} />\r\n\r\n\t\t\t<PostExcerpt post={post} attributes={attributes} />\r\n\t\t\t<PostReadMore post={post} attributes={attributes} />\r\n\t\t</div>\r\n\r\n\t\t{isRightImg && <FeatureImage post={post} attributes={attributes} />}\r\n\t</article>;\r\n};\r\nexport default SideImage;","import TitleMeta from '../Single/TitleMeta';\r\nimport PostExcerpt from '../Single/PostExcerpt';\r\nimport PostReadMore from '../Single/PostReadMore';\r\nimport { classNames } from '../utils/functions';\r\n\r\nconst Overlay = ({ post, attributes, postClass }) => {\r\n\tconst { title, thumbnail: { url: thumbUrl } } = post;\r\n\tconst { subLayout } = attributes;\r\n\r\n\tconst className = classNames(postClass, 'apbOverlay', {\r\n\t\t'apbOverlayHover': 'overlay-content-hover' === subLayout && thumbUrl,\r\n\t\t'apbOverlayBox': 'overlay-box' === subLayout || 'overlay-content-box' === subLayout,\r\n\t\t'apbOverlayHalfContent': 'overlay-half-content' === subLayout\r\n\t});\r\n\r\n\treturn <article className={className}>\r\n\t\t{thumbUrl && <img src={thumbUrl} alt={title} />}\r\n\r\n\t\t<div className='apbText'>\r\n\t\t\t<TitleMeta post={post} attributes={attributes} />\r\n\r\n\t\t\t{'overlay-box' !== subLayout && 'overlay-half-content' !== subLayout && <>\r\n\t\t\t\t<PostExcerpt post={post} attributes={attributes} />\r\n\t\t\t\t<PostReadMore post={post} attributes={attributes} />\r\n\t\t\t</>}\r\n\t\t</div>\r\n\t</article>;\r\n};\r\n\r\nexport default Overlay;","import Default from './Default';\r\nimport SideImage from './SideImage';\r\nimport Overlay from './Overlay';\r\nimport { classNames } from '../utils/functions';\r\n\r\nconst MapPosts = ({ posts, attributes }) => {\r\n\tconst { layout, subLayout, content = { height: 'auto' } } = attributes;\r\n\r\n\treturn posts.map(post => {\r\n\t\tconst { id, thumbnail } = post;\r\n\t\tconst postClass = classNames('apbPost', `apbPost-${id}`, `${content?.height}ContentHeight`, {\r\n\t\t\t'hasThumbnail': thumbnail.url,\r\n\t\t\t'swiper-slide': 'slider' === layout\r\n\t\t});\r\n\r\n\t\tswitch (subLayout) {\r\n\t\t\tcase 'default':\r\n\t\t\tcase 'title-meta':\r\n\t\t\t\treturn <Default post={post} attributes={attributes} postClass={postClass} />;\r\n\t\t\tcase 'left-image':\r\n\t\t\tcase 'right-image':\r\n\t\t\t\treturn <SideImage post={post} attributes={attributes} postClass={postClass} />;\r\n\t\t\tcase 'overlay-content':\r\n\t\t\tcase 'overlay-content-hover':\r\n\t\t\tcase 'overlay-box':\r\n\t\t\tcase 'overlay-content-box':\r\n\t\t\tcase 'overlay-half-content':\r\n\t\t\t\treturn <Overlay post={post} attributes={attributes} postClass={postClass} />;\r\n\t\t\tdefault:\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\t});\r\n}\r\nexport default MapPosts;","import MapPosts from '../../Layout/MapPosts';\r\n\r\nconst DisplayPosts = ({ posts, attributes }) => {\r\n\tconst { layout, columns, sliderIsPage, sliderIsPrevNext } = attributes;\r\n\tconst { desktop = 3, tablet = 2, mobile = 1 } = columns;\r\n\r\n\tconst PostsLoop = () => <MapPosts posts={posts} attributes={attributes} />\r\n\r\n\tswitch (layout) {\r\n\t\tcase 'grid':\r\n\t\t\treturn <div className={`apbGridPosts columns-${desktop} columns-tablet-${tablet} columns-mobile-${mobile}`}>\r\n\t\t\t\t<PostsLoop />\r\n\t\t\t</div>;\r\n\r\n\t\tcase 'grid1':\r\n\t\t\treturn <div className='apbGrid1Posts'>\r\n\t\t\t\t<PostsLoop />\r\n\t\t\t</div>;\r\n\r\n\t\tcase 'masonry':\r\n\t\t\treturn <div className={`apbMasonryPosts cols-${desktop} cols-tablet-${tablet} cols-mobile-${mobile}`}>\r\n\t\t\t\t<PostsLoop />\r\n\t\t\t</div>;\r\n\r\n\t\tcase 'slider':\r\n\t\t\treturn <div className='apbSliderPosts'>\r\n\t\t\t\t<div className='swiper-wrapper'>\r\n\t\t\t\t\t<PostsLoop />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{sliderIsPage && <div className='swiper-pagination'></div>}\r\n\r\n\t\t\t\t{sliderIsPrevNext && <>\r\n\t\t\t\t\t<div className='swiper-button-prev'></div>\r\n\t\t\t\t\t<div className='swiper-button-next'></div>\r\n\t\t\t\t</>}\r\n\t\t\t</div>;\r\n\r\n\t\tcase 'ticker':\r\n\t\t\treturn <div className='apbTickerPosts'>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<PostsLoop />\r\n\t\t\t\t</div>\r\n\t\t\t</div>;\r\n\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\nexport default DisplayPosts;","import { useMemo } from 'react';\r\n\r\nexport const DOTS = '&#183;';\r\n\r\nconst range = (start, end) => {\r\n\tlet length = end - start + 1;\r\n\treturn Array.from({ length }, (_, idx) => idx + start);\r\n};\r\n\r\nexport const usePagination = ({ currentPage, totalCount, pageSize, siblingCount = 1 }) => {\r\n\tconst paginationRange = useMemo(() => {\r\n\t\tconst totalPageCount = Math.ceil(totalCount / pageSize);\r\n\r\n\t\t// Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\r\n\t\tconst totalPageNumbers = siblingCount + 5;\r\n\r\n\t\t/*\r\n\t\t\tIf the number of pages is less than the page numbers we want to show in our\r\n\t\t\tpaginationComponent, we return the range [1..totalPageCount]\r\n\t\t*/\r\n\t\tif (totalPageNumbers >= totalPageCount) {\r\n\t\t\treturn range(1, totalPageCount);\r\n\t\t}\r\n\r\n\t\tconst leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\r\n\t\tconst rightSiblingIndex = Math.min(\r\n\t\t\tcurrentPage + siblingCount,\r\n\t\t\ttotalPageCount\r\n\t\t);\r\n\r\n\t\t/*\r\n\t\t\tWe do not want to show dots if there is only one position left \r\n\t\t\tafter/before the left/right page count as that would lead to a change if our Pagination\r\n\t\t\tcomponent size which we do not want\r\n\t\t*/\r\n\t\tconst shouldShowLeftDots = leftSiblingIndex > 2;\r\n\t\tconst shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\r\n\r\n\t\tconst firstPageIndex = 1;\r\n\t\tconst lastPageIndex = totalPageCount;\r\n\r\n\t\tif (!shouldShowLeftDots && shouldShowRightDots) {\r\n\t\t\tlet leftItemCount = 3 + 2 * siblingCount;\r\n\t\t\tlet leftRange = range(1, leftItemCount);\r\n\t\t\treturn [...leftRange, DOTS, totalPageCount];\r\n\t\t}\r\n\r\n\t\tif (shouldShowLeftDots && !shouldShowRightDots) {\r\n\t\t\tlet rightItemCount = 3 + 2 * siblingCount;\r\n\t\t\tlet rightRange = range(\r\n\t\t\t\ttotalPageCount - rightItemCount + 1,\r\n\t\t\t\ttotalPageCount\r\n\t\t\t);\r\n\t\t\treturn [firstPageIndex, DOTS, ...rightRange];\r\n\t\t}\r\n\r\n\t\tif (shouldShowLeftDots && shouldShowRightDots) {\r\n\t\t\tlet middleRange = range(leftSiblingIndex, rightSiblingIndex);\r\n\t\t\treturn [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\r\n\t\t}\r\n\t}, [currentPage, totalCount, pageSize, siblingCount]);\r\n\r\n\treturn paginationRange;\r\n};","import { useState } from 'react';\r\n\r\nimport { usePagination, DOTS } from './usePagination';\r\n\r\nconst Pagination = ({ attributes, totalCount, onChange }) => {\r\n\tconst { layout, isPostsPerPageAll, postsPerPage, isPagination, paginationPrevLabel, paginationNextLabel } = attributes;\r\n\r\n\tconst [currentPage, setCurrentPage] = useState(1);\r\n\r\n\tconst paginationRange = usePagination({\r\n\t\tcurrentPage,\r\n\t\ttotalCount,\r\n\t\tpageSize: postsPerPage,\r\n\t\tsiblingCount: 1\r\n\t});\r\n\r\n\tif (currentPage === 0 || paginationRange.length < 2) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tlet lastPage = paginationRange[paginationRange.length - 1];\r\n\r\n\tconst setPageNumber = pageNumber => {\r\n\t\tonChange(pageNumber);\r\n\t\tsetCurrentPage(pageNumber);\r\n\t}\r\n\r\n\treturn isPagination && !isPostsPerPageAll && 'slider' !== layout && 'ticker' !== layout ? <ul className={`apbPagination`}>\r\n\t\t<li className={`apbPageNumber ${currentPage === 1 ? 'disabled' : ''}`}\r\n\t\t\tonClick={() => setPageNumber(currentPage - 1)}\r\n\t\t>{paginationPrevLabel}</li>\r\n\r\n\t\t{paginationRange.map((pageNumber, index) => {\r\n\t\t\tif (pageNumber === DOTS) {\r\n\t\t\t\treturn <li key={index} className='dots'>&#183;&#183;&#183;&#183;&#183;</li>;\r\n\t\t\t}\r\n\r\n\t\t\treturn <li key={index}\r\n\t\t\t\tclassName={`apbPageNumber ${pageNumber === currentPage ? 'apbActivePage' : ''}`}\r\n\t\t\t\tonClick={() => setPageNumber(pageNumber)}\r\n\t\t\t> {pageNumber}</li>;\r\n\t\t})}\r\n\r\n\t\t<li className={`apbPageNumber ${currentPage === lastPage ? 'disabled' : ''}`}\r\n\t\t\tonClick={() => setPageNumber(currentPage + 1)}\r\n\t\t>{paginationNextLabel}</li>\r\n\t</ul> : null;\r\n};\r\nexport default Pagination;","import { useState, useEffect } from 'react';\r\nimport { render } from 'react-dom';\r\nconst $ = jQuery;\r\nimport 'swiper/css/bundle'; // Swiper CSS\r\n\r\nimport DisplayPosts from './Components/Frontend/DisplayPosts';\r\nimport Pagination from './Pagination';\r\nimport './style.scss';\r\nimport { sliderConfig, setSliderHeight, tickerConfig } from './utils/configs';\r\n\r\n// Advanced Posts Block\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\tconst postsEls = document.querySelectorAll('.wp-block-ap-block-posts');\r\n\tpostsEls.forEach(postEl => {\r\n\t\tconst attributes = JSON.parse(postEl.dataset.attributes);\r\n\t\tconst { totalPosts } = JSON.parse(postEl.dataset.extra);\r\n\t\tconst { layout } = attributes;\r\n\r\n\t\t// Slider\r\n\t\tif ('slider' === layout) {\r\n\t\t\tconst sliderEl = document.querySelector(`#${postEl.id} .apbSliderPosts`);\r\n\r\n\t\t\tif (sliderEl) {\r\n\t\t\t\tnew Swiper(sliderEl, sliderConfig(attributes));\r\n\t\t\t\t// new Swiper(sliderEl, {\r\n\t\t\t\t// \t...sliderConfig(attributes),\r\n\t\t\t\t// \ton: {\r\n\t\t\t\t// \t\tinit: () => {\r\n\t\t\t\t// \t\t\tconst slideWrapperEl = document.querySelector(`#${postEl.id} .apbSliderPosts .swiper-wrapper`);\r\n\t\t\t\t// \t\t\tslideWrapperEl.className = 'swiper-wrapper';\r\n\t\t\t\t// \t\t\tslideWrapperEl.style.gap = 0;\r\n\t\t\t\t// \t\t}\r\n\t\t\t\t// \t}\r\n\t\t\t\t// });\r\n\r\n\t\t\t\t// Slider Height\r\n\t\t\t\tsetSliderHeight(postEl.id);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// Ticker\r\n\t\tif ('ticker' === layout) {\r\n\t\t\tconst tickerEl = document.querySelector(`#${postEl.id} .apbTickerPosts`);\r\n\r\n\t\t\ttickerEl && $(tickerEl).easyTicker(tickerConfig(attributes));\r\n\t\t}\r\n\r\n\t\trender(<RenderMain postEl={postEl} totalPosts={totalPosts} attributes={attributes} />, document.querySelector(`#${postEl.id} .apbPostsMain`));\r\n\r\n\t\tpostEl?.removeAttribute('data-attributes');\r\n\t\tpostEl?.removeAttribute('data-extra');\r\n\t});\r\n});\r\n\r\nconst RenderMain = ({ postEl, totalPosts, attributes }) => {\r\n\tconst { cId, layout, isPostsPerPageAll, postsPerPage, postsOffset, isPagination, paginationPrevLabel, paginationNextLabel, fImgSize = 'full', metaDateFormat = 'M j, Y' } = attributes;\r\n\r\n\tconst [posts, setPosts] = useState([]);\r\n\r\n\tconst postsMainPHEl = document.querySelector(`#${postEl.id} .apbPostsMainPH`);\r\n\r\n\t// Remove PHP posts if has posts\r\n\tuseEffect(() => {\r\n\t\tposts?.length && postsMainPHEl?.remove();\r\n\t}, [posts, postsMainPHEl]);\r\n\r\n\treturn <>\r\n\t\t{posts?.length ? <DisplayPosts posts={posts} attributes={attributes} clientId={cId} /> : null}\r\n\r\n\t\t<Pagination attributes={{ layout, isPostsPerPageAll, postsPerPage, isPagination, paginationPrevLabel, paginationNextLabel }} totalCount={totalPosts} onChange={val => {\r\n\t\t\t// window.scrollTo({\r\n\t\t\t// \ttop: postEl.offsetTop,\r\n\t\t\t// \tbehavior: 'smooth',\r\n\t\t\t// });\r\n\r\n\t\t\t// Fetch posts on page click\r\n\t\t\tfetch(`${apbPageData?.ajaxUrl}?action=apb_get_posts&cId=${cId}&pageNumber=${val}&postsPerPage=${postsPerPage}&postsOffset=${postsOffset}&fImgSize=${fImgSize}&metaDateFormat=${metaDateFormat}`)\r\n\t\t\t\t.then(res => res.json())\r\n\t\t\t\t.then(data => setPosts(data));\r\n\t\t}} />\r\n\t</>\r\n}","export const sliderConfig = (attributes) => {\r\n\tconst { columns, columnGap, sliderIsLoop, sliderIsTouchMove, sliderIsAutoplay, sliderAutoplayOptions = { delay: 1.5 }, sliderSpeed, sliderEffect, sliderIsPageClickable, sliderIsPageDynamic } = attributes;\r\n\r\n\treturn {\r\n\t\t// Optional parameters\r\n\t\tdirection: 'horizontal',\r\n\t\tslidesPerView: columns?.mobile,\r\n\t\tbreakpoints: {\r\n\t\t\t// when window width is >= 576px\r\n\t\t\t576: { slidesPerView: columns?.tablet },\r\n\t\t\t// when window width is >= 768px\r\n\t\t\t768: { slidesPerView: columns?.desktop },\r\n\t\t},\r\n\t\tspaceBetween: columnGap,\r\n\t\tloop: sliderIsLoop,\r\n\t\tallowTouchMove: sliderIsTouchMove,\r\n\t\tgrabCursor: sliderIsTouchMove,\r\n\t\tautoplay: sliderIsAutoplay ? { delay: sliderAutoplayOptions?.delay * 1000 } : false,\r\n\t\tspeed: sliderSpeed * 1000,\r\n\t\teffect: sliderEffect,\r\n\t\tfadeEffect: { crossFade: true },\r\n\t\tcreativeEffect: {\r\n\t\t\tprev: {\r\n\t\t\t\tshadow: true,\r\n\t\t\t\ttranslate: ['-120%', 0, -500],\r\n\t\t\t},\r\n\t\t\tnext: {\r\n\t\t\t\tshadow: true,\r\n\t\t\t\ttranslate: ['120%', 0, -500],\r\n\t\t\t}\r\n\t\t},\r\n\t\tallowSlideNext: true,\r\n\t\tallowSlidePrev: true,\r\n\t\tautoHeight: false, // Frontend\r\n\t\tnotificationClass: null,\r\n\r\n\t\t// Controllers\r\n\t\tpagination: {\r\n\t\t\tel: '.swiper-pagination',\r\n\t\t\tclickable: sliderIsPageClickable,\r\n\t\t\tdynamicBullets: sliderIsPageDynamic\r\n\t\t},\r\n\t\tnavigation: {\r\n\t\t\tnextEl: '.swiper-button-next',\r\n\t\t\tprevEl: '.swiper-button-prev',\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const setSliderHeight = (id) => {\r\n\tconst slideHeightArray = [];\r\n\tconst swiperSlide = document.querySelectorAll(`#${id} .apbSliderPosts .swiper-slide`);\r\n\tconst swiperSlideText = document.querySelectorAll(`#${id} .apbSliderPosts .swiper-slide .apbText`);\r\n\tswiperSlideText?.forEach(slideText => {\r\n\t\tslideHeightArray.push(slideText?.clientHeight);\r\n\t});\r\n\tswiperSlide?.length && swiperSlide.forEach(slide => {\r\n\t\tslide.style.height = `${Math.max(...slideHeightArray)}px`;\r\n\t});\r\n}\r\n\r\nexport const tickerConfig = (attributes) => {\r\n\tconst { rowGap, tickerDirection = 'up', tickerSpeed = 'slow', tickerInterval = 2000, tickerHeight = '0px', tickerVisible = 3, tickerIsMousePause = true } = attributes;\r\n\r\n\treturn {\r\n\t\tdirection: tickerDirection,\r\n\t\teasing: 'swing',\r\n\t\tspeed: isNaN(tickerSpeed) ? tickerSpeed : parseInt(tickerSpeed),\r\n\t\tinterval: tickerInterval,\r\n\t\theight: '0px' === tickerHeight || '0em' === tickerHeight ? 'auto' : tickerHeight,\r\n\t\tgap: rowGap,\r\n\t\tvisible: tickerVisible,\r\n\t\tmousePause: tickerIsMousePause\r\n\t}\r\n}"],"names":["React","ReactDOM","post","attributes","link","thumbnail","thumbUrl","url","thumbAlt","alt","categories","isFImg","isFImgLink","isMeta","isMetaCategory","metaCategoryIn","isLinkNewTab","className","href","target","rel","src","dangerouslySetInnerHTML","__html","space","author","name","isMetaAuthor","isMetaAuthorLink","metaAuthorIcon","date","isMetaDate","metaDateIcon","truncate","str","nu_words","split","splice","join","classNames","args","classes","reduce","acc","arg","push","Object","entries","forEach","key","raw","metaCategoryIcon","coma","readTime","isMetaReadTime","metaReadTimeIcon","isMetaReadTimeSec","metaReadTimeLabel","readTimeText","min","sec","title","commentCount","isMetaComment","metaCommentIcon","isTitle","isTitleLink","elementsSort","map","el","index","excerpt","content","isExcerpt","isExcerptFromContent","isEllipsisOnExcerpt","excerptLength","finalExcerpt","ellipsis","length","isReadMore","readMorePosition","readMoreLabel","postClass","subLayout","isLeftImg","isRightImg","posts","layout","height","id","columns","sliderIsPage","sliderIsPrevNext","desktop","tablet","mobile","PostsLoop","DOTS","range","start","end","Array","from","_","idx","totalCount","onChange","isPostsPerPageAll","postsPerPage","isPagination","paginationPrevLabel","paginationNextLabel","useState","currentPage","setCurrentPage","paginationRange","pageSize","siblingCount","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","rightRange","middleRange","usePagination","lastPage","setPageNumber","pageNumber","onClick","$","jQuery","document","addEventListener","querySelectorAll","postEl","slideHeightArray","swiperSlide","swiperSlideText","JSON","parse","dataset","totalPosts","extra","sliderEl","querySelector","Swiper","columnGap","sliderIsLoop","sliderIsTouchMove","sliderIsAutoplay","sliderAutoplayOptions","delay","sliderSpeed","sliderEffect","sliderIsPageClickable","sliderIsPageDynamic","direction","slidesPerView","breakpoints","spaceBetween","loop","allowTouchMove","grabCursor","autoplay","speed","effect","fadeEffect","crossFade","creativeEffect","prev","shadow","translate","next","allowSlideNext","allowSlidePrev","autoHeight","notificationClass","pagination","clickable","dynamicBullets","navigation","nextEl","prevEl","sliderConfig","slideText","clientHeight","slide","style","tickerEl","easyTicker","rowGap","tickerDirection","tickerSpeed","tickerInterval","tickerHeight","tickerVisible","tickerIsMousePause","easing","isNaN","parseInt","interval","gap","visible","mousePause","tickerConfig","render","RenderMain","removeAttribute","cId","postsOffset","fImgSize","metaDateFormat","setPosts","postsMainPHEl","useEffect","remove","clientId","val","fetch","apbPageData","ajaxUrl","then","res","json","data"],"sourceRoot":""}